#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;

            quick-tap-ms = <175>;
            flavor = "tap-preferred";
        };

        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        smiley: smiley {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp MINUS &kp RPAR>;
            label = "SMILEY";
        };

        vs_close_windows: vs_close_windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(W) &kp L>;
            label = "VS_CLOSE_WINDOWS";
        };

        vs_git_commit: vs_git_commit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(G) &kp C>;
            label = "VS_GIT_COMMIT";
        };

        vs_clean_build: vs_clean_build {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(B) &kp C>;
            label = "VS_CLEAN_BUILD";
        };

        vs_git_history: vs_git_history {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(G) &kp H>;
            label = "VS_GIT_HISTORY";
        };

        equal_lt: equal_lt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "EQUAL_LT";
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            label = "mac";
            bindings = <
&as EQUAL       &kp N1     &kp N2      &kp N3    &kp N4     &kp N5  &tog 7                                                                  &mo 9               &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp Q      &kp W       &kp E     &kp R      &kp T   &to 1                                                                   &kp LG(L)           &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC         &kp A      &kp S       &kp D     &kp F      &kp G   &kp F13      &kp LCTRL  &kp LEFT_ALT      &kp LGUI       &mo 11         &kp LC(LA(DELETE))  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X       &kp C     &kp V      &kp B                           &kp HOME          &kp PAGE_UP                                       &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL       &as GRAVE  &caps_word  &kp LEFT  &kp RIGHT          &lt 6 ENTER  &kp DEL    &kp END           &kp PAGE_DOWN  &kp BACKSPACE  &mt LGUI SPACE              &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mt LCTRL ENTER
            >;
        };

        mac_with_as {
            label = "mac";
            bindings = <
&as EQUAL       &kp N1     &kp N2      &kp N3    &kp N4     &kp N5  &tog 7                                                                           &mo 9               &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp Q      &kp W       &kp E     &kp R      &kp T   &to 2                                                                            &kp LG(L)           &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC         &kp A      &kp S       &kp D     &kp F      &kp G   &kp F13      &kp LCTRL  &kp LEFT_ALT      &kp LGUI       &mo 11                  &kp LC(LA(DELETE))  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X       &kp C     &kp V      &kp B                           &kp HOME          &kp PAGE_UP                                                &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL       &as GRAVE  &caps_word  &kp LEFT  &kp RIGHT          &lt 6 ENTER  &kp DEL    &kp END           &kp PAGE_DOWN  &mt LEFT_ALT BACKSPACE  &mt LGUI SPACE              &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mt LCTRL ENTER
            >;
        };

        mac_home_row_mods {
            label = "mac";
            bindings = <
&as EQUAL       &kp N1       &kp N2          &kp N3      &kp N4            &kp N5  &tog 7                                                                       &mo 9               &kp N6  &kp N7            &kp N8      &kp N9          &kp N0               &kp MINUS
&kp TAB         &kp Q        &kp W           &kp E       &kp R             &kp T   &to 3                                                                        &kp LG(L)           &kp Y   &kp U             &kp I       &kp O           &kp P                &kp BSLH
&kp ESC         &mt LCTRL A  &mt LEFT_ALT S  &mt LGUI D  &mt LEFT_SHIFT F  &kp G   &kp F13      &kp LCTRL  &kp LEFT_ALT      &kp LGUI       &mo 11              &kp LC(LA(DELETE))  &kp H   &mt LEFT_SHIFT J  &mt LGUI K  &mt LEFT_ALT L  &mt LCTRL SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z        &kp X           &kp C       &kp V             &kp B                           &kp HOME          &kp PAGE_UP                                            &kp N   &kp M             &kp COMMA   &kp DOT         &kp FSLH             &kp RSHFT
&kp LCTRL       &as GRAVE    &caps_word      &kp LEFT    &kp RIGHT                 &lt 6 ENTER  &kp DEL    &kp END           &kp PAGE_DOWN  &mt LGUI BACKSPACE  &kp SPACE                   &kp UP            &kp DOWN    &kp LBKT        &kp RBKT             &mt LCTRL ENTER
            >;
        };

        windows {
            label = "Windows";
            bindings = <
&as EQUAL       &kp N1     &kp N2      &kp N3    &kp N4     &kp N5  &tog 7                                                                       &mo 0               &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp Q      &kp W       &kp E     &kp R      &kp T   &to 4                                                                        &kp LG(L)           &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC         &kp A      &kp S       &kp D     &kp F      &kp G   &kp F13      &kp LCTRL  &kp LEFT_ALT      &kp LGUI       &mo 11              &kp LC(LA(DELETE))  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X       &kp C     &kp V      &kp B                           &kp HOME          &kp PAGE_UP                                            &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL       &as GRAVE  &caps_word  &kp LEFT  &kp RIGHT          &lt 7 ENTER  &kp DEL    &kp END           &kp PAGE_DOWN  &mt LGUI BACKSPACE  &kp SPACE                   &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mt LCTRL ENTER
            >;
        };

        windows_with_as {
            label = "Windows";
            bindings = <
&as EQUAL       &as NUMBER_1  &as NUMBER_2  &as NUMBER_3  &as NUMBER_4  &as N5  &tog 7                                                                          &mo 0               &as NUMBER_6  &as N7  &as N8     &as N9            &as N0             &as MINUS
&kp TAB         &as Q         &as W         &as E         &as R         &as T   &to 5                                                                           &kp LG(L)           &as Y         &as U   &as I      &as O             &as P              &as NON_US_BACKSLASH
&kp ESCAPE      &as A         &as S         &as D         &as F         &as G   &none        &kp LCTRL     &kp LEFT_ALT      &kp LGUI       &mo 11              &kp LC(LA(DELETE))  &as H         &as J   &as K      &as L             &as SEMICOLON      &as SQT
&kp LEFT_SHIFT  &as Z         &as X         &as C         &as V         &as B                              &kp HOME          &kp PAGE_UP                                            &as N         &as M   &as COMMA  &as DOT           &as SLASH          &mo 10
&kp LCTRL       &as GRAVE     &caps_word    &kp LEFT      &kp RIGHT             &lt 7 ENTER  &mt LGUI DEL  &kp END           &kp PAGE_DOWN  &mt LGUI BACKSPACE  &kp SPACE                         &kp UP  &kp DOWN   &as LEFT_BRACKET  &as RIGHT_BRACKET  &mt LCTRL ENTER
            >;
        };

        windows_home_row_mods {
            bindings = <
&kp EQUAL       &kp N1      &kp N2          &kp N3       &kp N4            &kp N5  &tog 7                                                          &mo 0            &kp N6  &kp N7             &kp N8       &kp N9      &kp N0              &kp MINUS
&kp TAB         &kp Q       &kp W           &kp E        &kp R             &kp T   &to 0                                                           &kp LG(L)        &kp Y   &kp U              &kp I        &kp O       &kp P               &kp BSLH
&kp ESC         &hm LGUI A  &hm LEFT_ALT S  &hm LCTRL D  &hm LEFT_SHIFT F  &kp G   &none        &kp LCTRL  &kp LALT      &mo 11     &kp RCTRL      &kp LC(LA(DEL))  &kp H   &hm RIGHT_SHIFT J  &hm LCTRL K  &hm LALT L  &hm RGUI SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z       &kp X           &kp C        &kp V             &kp B                           &kp HOME      &kp PG_UP                                  &kp N   &kp M              &kp COMMA    &kp DOT     &kp FSLH            &mo 10
&kp LCTRL       &kp GRAVE   &caps_word      &kp LEFT     &kp RIGHT                 &lt 7 ENTER  &kp DEL    &kp END       &kp PG_DN  &kp BACKSPACE  &kp SPACE                &kp UP             &kp DOWN     &kp LBKT    &kp RBKT            &lt 7 ENTER
            >;

            label = "Windows";
        };

        fn_mac {
            bindings = <
&kp F1        &kp F2     &kp F3     &kp F4     &kp F5     &kp F6         &tog 7                                              &mo 9          &kp F7  &kp F8  &kp F9  &kp F10    &kp F11  &kp F12
&kp GRAVE     &kp LG(Q)  &kp LG(W)  &trans     &kp LG(R)  &kp LG(T)      &none                                               &none          &none   &trans  &none   &kp LA(O)  &trans   &smiley
&trans        &kp LA(A)  &kp LG(S)  &mkp MB3   &mkp MB1   &mkp MB2       &kp LS(LG(X))  &trans  &trans      &trans  &trans   &none          &none   &none   &none   &none      &trans   &kp LA(SQT)
&kp LS(LALT)  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LS(LG(V))                         &trans      &trans                          &none   &trans  &trans  &none      &trans   &trans
&kp LS(LGUI)  &trans     &trans     &mkp MB4   &mkp MB5                  &none          &none   &trans      &trans  &as SQT  &kp LG(SPACE)          &trans  &trans  &trans     &trans   &trans
            >;
        };

        fn_windows {
            bindings = <
&kp TILDE          &kp F1      &kp F2      &kp F3     &kp F4          &kp F5     &kp LC(LS(R))                                              &mo 9              &kp F6  &kp F7   &kp F8                &kp F9                 &kp F10        &kp F11
&kp F13            &kp LA(F4)  &kp LC(F4)  &trans     &kp LC(R)       &kp LC(T)  &kp LG(LC(LA(N5)))                                         &kp PRINTSCREEN    &none   &none    &kp LEFT_BRACE        &kp LG(O)              &kp LS(LC(P))  &kp F12
&trans             &kp LG(A)   &kp LC(S)   &mkp MB3   &mkp MB1        &mkp MB2   &kp LG(LC(LA(N6)))  &trans  &trans      &trans  &trans     &none              &none   &none    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &equal_lt      &kp LG(SQT)
&kp LA(LG(LC(Y)))  &kp LC(Z)   &kp LC(X)   &kp LC(C)  &kp LS(INSERT)  &kp LG(V)                              &trans      &trans                                &none   &none    &as LEFT_BRACKET      &as RIGHT_BRACKET      &trans         &trans
&kp LA(LC(LG(Z)))  &trans      &trans      &mkp MB4   &mkp MB5                   &none               &none   &trans      &trans  &kp GRAVE  &kp DOUBLE_QUOTES          &smiley  &trans                &trans                 &trans         &kp RCTRL
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 0      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 9      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 9
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        visual_studio {
            bindings = <
&kp LS(LC(R))  &kp F1               &kp F2             &kp F3           &kp F4         &kp F5         &kp F6                                                &kp F7             &kp F8           &kp F9           &kp F10       &kp F11        &kp F12  &kp LC(LA(N1))
&trans         &trans               &vs_close_windows  &kp LA(LS(D))    &kp LS(LC(R))  &kp LA(LS(R))  &kp MINUS                                             &trans             &trans           &kp LS(LA(F12))  &trans        &trans         &trans   &kp LC(LA(N2))
&kp LSHFT      &trans               &vs_git_commit     &kp LS(LC(F12))  &kp LC(LS(F))  &kp LC(T)      &trans     &kp F11  &trans            &trans  &trans  &trans             &vs_git_history  &kp LA(END)      &kp LA(HOME)  &kp LS(LA(L))  &trans   &trans
&trans         &kp LC(PAUSE_BREAK)  &trans             &vs_clean_build  &kp F11        &kp LS(LC(B))                      &kp LA(HOME)      &trans                             &kp LS(F2)       &kp LA(BSLH)     &trans        &trans         &trans   &trans
&trans         &trans               &trans             &trans           &trans                        &kp F10    &kp F9   &kp LA(END)       &trans  &kp F5  &kp LS(LC(SPACE))                   &trans           &trans        &trans         &trans   &kp LA(ENTER)
            >;
        };

        meh {
            bindings = <
&trans  &trans             &trans             &trans             &trans             &trans             &trans                                      &trans  &trans             &trans             &trans             &trans             &trans             &trans
&trans  &kp LS(LA(LC(Q)))  &kp LS(LA(LC(W)))  &kp LS(LA(LC(E)))  &kp LS(LA(LC(R)))  &kp LS(LA(LC(T)))  &trans                                      &trans  &kp LS(LA(LC(Y)))  &kp LS(LA(LC(U)))  &kp LS(LA(LC(I)))  &kp LS(LA(LC(O)))  &kp LC(LA(LS(P)))  &trans
&trans  &kp LS(LA(LC(A)))  &kp LS(LA(LC(S)))  &kp LS(LA(LC(D)))  &kp LS(LA(LC(F)))  &kp LS(LA(LC(G)))  &trans  &trans  &trans      &trans  &trans  &trans  &kp LA(LS(LC(H)))  &kp LS(LA(LC(J)))  &kp LC(LA(LS(K)))  &kp LC(LA(LS(L)))  &trans             &trans
&trans  &kp LS(LA(LC(Z)))  &kp LS(LA(LC(X)))  &kp LS(LA(LC(C)))  &kp LS(LA(LC(V)))  &kp LC(LA(LS(B)))                  &trans      &trans                  &kp LS(LA(LC(N)))  &kp LC(LA(LS(M)))  &trans             &trans             &trans             &trans
&trans  &trans             &trans             &trans             &trans                                &trans  &trans  &trans      &trans  &trans  &trans                     &trans             &trans             &trans             &trans             &trans
            >;
        };
    };
};
